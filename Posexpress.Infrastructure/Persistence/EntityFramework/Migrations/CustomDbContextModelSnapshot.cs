// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Posexpress.Infrastructure.Persistence.EntityFramework;

#nullable disable

namespace Posexpress.Infrastructure.Persistence.EntityFramework.Migrations
{
    [DbContext(typeof(CustomDbContext))]
    partial class CustomDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Posexpress.Core.Modules.ERP.Barcodes.Entities.Barcode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdCodigoBarra");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Activo");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("IdProducto");

                    b.Property<string>("UniqueCode")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("UniqueCodigo");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UniqueCode")
                        .IsUnique();

                    b.ToTable("CodigosBarras", (string)null);
                });

            modelBuilder.Entity("Posexpress.Core.Modules.ERP.ErpProducts.Entities.ErpProduct", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("IdProducto");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Costo");

                    b.Property<DateTime>("RegisteredAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaRegistro");

                    b.Property<int>("Stock")
                        .HasColumnType("int")
                        .HasColumnName("Stock");

                    b.Property<string>("UniqueCode")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("UniqueCodigo");

                    b.HasKey("ProductId");

                    b.HasIndex("UniqueCode")
                        .IsUnique();

                    b.ToTable("ErpProductos", (string)null);
                });

            modelBuilder.Entity("Posexpress.Core.Modules.Express.Categories.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Activo");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Descripcion");

                    b.Property<int?>("ParentCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("IdCategoriaPadre");

                    b.HasKey("Id");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("Categorias", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Description = "General"
                        });
                });

            modelBuilder.Entity("Posexpress.Core.Modules.Express.ExpProducts.Entities.ExpProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdProducto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Activo");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaVencimiento");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Nombre");

                    b.Property<string>("Observations")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Observaciones");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Precio");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("int")
                        .HasColumnName("IdTipoProducto");

                    b.HasKey("Id");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("ExpProductos", (string)null);
                });

            modelBuilder.Entity("Posexpress.Core.Modules.Express.ExpSales.Entities.SaleExp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Client")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Cliente");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("Fecha");

                    b.Property<decimal>("DiscountPercent")
                        .HasColumnType("decimal(5,4)")
                        .HasColumnName("Descuento");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("IdProducto");

                    b.Property<string>("ProductUniqueCode")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("UniqueProducto");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("Cantidad");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Precio");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("VentaExpress", (string)null);
                });

            modelBuilder.Entity("Posexpress.Core.Modules.Express.ProductCategories.Entities.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdDetalle");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("IdCategoria");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaCreacion");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("IdProducto");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ProductId", "CategoryId")
                        .IsUnique();

                    b.ToTable("ProductosCategorias", (string)null);
                });

            modelBuilder.Entity("Posexpress.Core.Modules.Express.ProductTypes.Entities.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Descripcion");

                    b.HasKey("Id");

                    b.ToTable("TiposProducto", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "General"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Service"
                        });
                });

            modelBuilder.Entity("Posexpress.Core.Modules.ERP.Barcodes.Entities.Barcode", b =>
                {
                    b.HasOne("Posexpress.Core.Modules.ERP.ErpProducts.Entities.ErpProduct", "Product")
                        .WithMany("Barcodes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Posexpress.Core.Modules.ERP.ErpProducts.Entities.ErpProduct", b =>
                {
                    b.HasOne("Posexpress.Core.Modules.Express.ExpProducts.Entities.ExpProduct", "Product")
                        .WithOne()
                        .HasForeignKey("Posexpress.Core.Modules.ERP.ErpProducts.Entities.ErpProduct", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Posexpress.Core.Modules.Express.Categories.Entities.Category", b =>
                {
                    b.HasOne("Posexpress.Core.Modules.Express.Categories.Entities.Category", "ParentCategory")
                        .WithMany("Children")
                        .HasForeignKey("ParentCategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("Posexpress.Core.Modules.Express.ExpProducts.Entities.ExpProduct", b =>
                {
                    b.HasOne("Posexpress.Core.Modules.Express.ProductTypes.Entities.ProductType", "ProductType")
                        .WithMany("Products")
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("Posexpress.Core.Modules.Express.ExpSales.Entities.SaleExp", b =>
                {
                    b.HasOne("Posexpress.Core.Modules.Express.ExpProducts.Entities.ExpProduct", "Product")
                        .WithMany("Sales")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Posexpress.Core.Modules.Express.ProductCategories.Entities.ProductCategory", b =>
                {
                    b.HasOne("Posexpress.Core.Modules.Express.Categories.Entities.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Posexpress.Core.Modules.Express.ExpProducts.Entities.ExpProduct", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Posexpress.Core.Modules.ERP.ErpProducts.Entities.ErpProduct", b =>
                {
                    b.Navigation("Barcodes");
                });

            modelBuilder.Entity("Posexpress.Core.Modules.Express.Categories.Entities.Category", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("ProductCategories");
                });

            modelBuilder.Entity("Posexpress.Core.Modules.Express.ExpProducts.Entities.ExpProduct", b =>
                {
                    b.Navigation("ProductCategories");

                    b.Navigation("Sales");
                });

            modelBuilder.Entity("Posexpress.Core.Modules.Express.ProductTypes.Entities.ProductType", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
